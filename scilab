// Matrizes do sistema original
A = [0 1; 0 0];
B = [0; 1];
C = [1 0];
D = 0;

// Realimentação unitária: K = [1 0]
K = [1 0];

// Novo sistema com realimentação de estados (A - BK)
A_feedback = A - B * K;

// Definir o sistema no espaço de estados com realimentação
sys_feedback = syslin('c', A_feedback, B, C, D);

// Condições iniciais (posição e velocidade iniciais)
x0 = [0; 0];

// Tempo de simulação
t = 0:0.01:10;  // Simulação de 10 segundos

// Entrada: Degrau unitário (referência r(t) = 1)
r = ones(t);

// Simulação do sistema com realimentação
[y, x] = csim(r, t, sys_feedback, x0);

// Plotar a posição (x1) e a velocidade (x2)
figure();
subplot(2,1,1);
plot(t, x(1,:), 'b');
xlabel('Tempo (s)');
ylabel('Posição (m)');
title('Posição vs Tempo (Com Realimentação Unitária)');

subplot(2,1,2);
plot(t, x(2,:), 'r');
xlabel('Tempo (s)');
ylabel('Velocidade (m/s)');
title('Velocidade vs Tempo (Com Realimentação Unitária)');

